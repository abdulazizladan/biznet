{"version":3,"sources":["./src/app/auth/components/password-reset/password-reset.component.ts","./src/app/auth/components/password-reset/password-reset.component.html","./src/app/auth/auth-routing.module.ts","./src/app/not-found-component/not-found-component.component.ts","./src/app/not-found-component/not-found-component.component.html","./src/environments/environment.ts","./src/app/core/core-routing.module.ts","./src/app/auth/services/auth.service.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/components/toolbar/toolbar.component.ts","./src/app/auth/auth.module.ts","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/app-routing.module.ts","./src/app/core/components/sidenav/sidenav.component.ts","./src/app/core/components/sidenav/sidenav.component.html","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;AAOO,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;sGAAtB,sBAAsB;QCPnC,oEAAG;QAAA,gFAAqB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;ACC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEa;AACS;AACiB;;;AAE9F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAG,EAAE;QACT,UAAU,EAAG,OAAO;QACpB,SAAS,EAAG,MAAM;KACnB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gFAAc;KAC1B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,yFAAiB;KAC7B;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,0GAAsB;KAClC;CACF,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;;;;;;;;;;;;;;;;;ACtBjB,MAAM,0BAA0B;IAErC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oGALU,0BAA0B;0GAA1B,0BAA0B;QCPvC,oEAAG;QAAA,qFAA0B;QAAA,4DAAI;;;;;;;;;;;;;;ACAjC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,QAAQ,EAAG;QACX,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,8BAA8B;QAC1C,SAAS,EAAE,cAAc;QACzB,aAAa,EAAE,0BAA0B;QACzC,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CACA,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACvBnE;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;;;;;;;;;;;;;;;;;ACEjB,MAAM,WAAW;IAEtB,gBAAgB,CAAC;;sEAFN,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;;;AAQlD,MAAM,cAAc;IAIzB,YAAoB,EAAgB,EAAU,KAAmB;QAA7C,OAAE,GAAF,EAAE,CAAc;QAAU,UAAK,GAAL,KAAK,CAAc;IAEjE,CAAC;IAED,KAAK;IAEL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAG,CAAC,EAAE,EAAE;oBACX,yDAAU,CAAC,KAAK;oBAChB,yDAAU,CAAC,QAAQ;iBACpB,CAAC;YACF,QAAQ,EAAG,CAAC,EAAE,EAAE;oBACd,yDAAU,CAAC,QAAQ;iBACpB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;;4EAtBU,cAAc;8FAAd,cAAc;QCT3B,yEAEI;QAAA,8EACI;QAAA,0EACI;QAAA,kFACI;QAAA,8EACI;QAAA,2EACJ;QAAA,4DAAW;QACX,iFACI;QAAA,kEACJ;QAAA,4DAAiB;QAEjB,oFACI;QAAA,gFACJ;QAAA,4DAAoB;QACxB,4DAAkB;QAElB,uFAEI;QAAA,qFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEACA;QAAA,+EAAoC;QAAA,gEAAI;QAAA,4DAAW;QACvD,4DAAiB;QAEjB,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,+EAAoC;QAAA,gEAAI;QAAA,4DAAW;QACvD,4DAAiB;QAErB,4DAAmB;QAEnB,uFACI;QAAA,8EAAyF;QAAlB,uIAAS,WAAO,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC3G,4DAAmB;QAEnB,uFACI;QAAA,4EAAe;QAAA,8EAA+C;QAAA,oEAAQ;QAAA,4DAAS;QACnF,4DAAkB;QACtB,4DAAO;QACX,4DAAW;QAEf,4DAAM;;QAxCQ,0DAAuB;QAAvB,oFAAuB;QA+BG,2DAA8B;QAA9B,2FAA8B;;;;;;;;;;;;;;;;;;;;AC3B/D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;;;;;;;;;;;;;;;;;ACOxB,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;;;;;;;;;;;;;ACN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACS;AACF;AAEtD,kBAAkB;AACqC;AACI;AACJ;AACA;AAEvD,kBAAkB;AACsC;AAEE;AACU;AACS;AACiB;;AAsBvF,MAAM,UAAU;;0FAAV,UAAU;+IAAV,UAAU,kBAjBZ;YACP,4DAAY;YACZ,sEAAiB;YACjB,qEAAgB;YAChB,kEAAmB;YACnB,wEAAe;YACf,oEAAa;YACb,sEAAc;YACd,oEAAa;YACb,qEAAgB;SACjB;oIAOU,UAAU,mBAlBN,gFAAc,EAAE,0FAAiB,EAAE,2GAAsB,aAEtE,4DAAY;QACZ,sEAAiB;QACjB,qEAAgB;QAChB,kEAAmB;QACnB,wEAAe;QACf,oEAAa;QACb,sEAAc;QACd,oEAAa;QACb,qEAAgB,aAGhB,gFAAc;QACd,0FAAiB;QACjB,2GAAsB;;;;;;;;;;;;;;;;;;;;;AC9BnB,MAAM,eAAe;IAI1B,YAAoB,YAA8B;QAA9B,iBAAY,GAAZ,YAAY,CAAkB;QAFlD,eAAU,GAAa,KAAK,CAAC;IAI7B,CAAC;IAEK,MAAM,CAAE,KAAc,EAAE,QAAiB;;YAC7C,MAAM,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CACtE,GAAG,GAAE;gBACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxD,CAAC,CACF;QACH,CAAC;KAAA;IAEK,MAAM,CAAE,KAAc,EAAE,QAAiB;;YAC7C,MAAM,IAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAC1E,GAAG,GAAE;gBACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxD,CAAC,CACF;QACH,CAAC;KAAA;IAEK,MAAM;;YACV,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAC5B,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC;KAAA;;8EA7BU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAER;AACY;AAE9D,aAAa;AACmC;AACA;AAEhD,kBAAkB;AACsC;AACD;AAEC;AACT;AACgC;AACkB;;;AAgC1F,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBALT;QACT,0EAAe;KAChB,YAtBQ;YACP,+DAAiB,CAAC,aAAa,CAC7B;gBACE,MAAM,EAAE,yCAAyC;gBACjD,UAAU,EAAE,8BAA8B;gBAC1C,SAAS,EAAE,cAAc;gBACzB,aAAa,EAAE,0BAA0B;gBACzC,iBAAiB,EAAE,cAAc;gBACjC,KAAK,EAAE,2CAA2C;gBAClD,aAAa,EAAE,cAAc;aAC9B,CACF;YACD,4DAAU;YACV,4DAAU;YACV,qEAAgB;YAChB,oEAAa;YACb,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;SACxB;oIAMU,SAAS,mBA5BlB,2DAAY;QACZ,8GAA0B,8EAc1B,4DAAU;QACV,4DAAU;QACV,qEAAgB;QAChB,oEAAa;QACb,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;;;;;;;;;;;;;ACxC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAE/C,0BAA0B;AACmC;AACL;AACK;AACN;AACI;AACJ;AAEG;AACgB;AACA;;AAoBnE,MAAM,UAAU;;0FAAV,UAAU;+IAAV,UAAU,kBAfZ;YACP,4DAAY;YACZ,sEAAiB;YACjB,0EAAgB;YAChB,qEAAgB;YAChB,0EAAgB;YAChB,oEAAa;YACb,wEAAe;YACf,oEAAa;SACd;oIAMU,UAAU,mBAhBN,sFAAgB,EAAE,sFAAgB,aAE/C,4DAAY;QACZ,sEAAiB;QACjB,0EAAgB;QAChB,qEAAgB;QAChB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,oEAAa,aAGb,sFAAgB;QAChB,sFAAgB;;;;;;;;;;;;;AC7BpB;AAAA;AAAA;AAAA;AAAA;AAAuD;AAIyC;;;AAEhG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,6GAA0B;KACtC;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;;;ACTjB,MAAM,gBAAgB;IAG3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFANU,gBAAgB;gGAAhB,gBAAgB;;QCP7B,0FACE;QAAA,mFAAuC;QAAA,yEAAc;QAAA,4DAAa;QAClE,qFACE;QAAA,4EACI;QADI,oRAAS,YAAe,IAAC;QAC7B,2EAAU;QAAA,+DAAI;QAAA,4DAAW;QAC7B,4DAAS;QACT,yEACA;QAAA,2EAA+B;QACjC,4DAAqB;QACvB,4DAAuB;;;;;;;;;;;;;;ACRvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;;AAOlD,MAAM,iBAAiB;IAI5B,YAAoB,EAAgB;QAAhB,OAAE,GAAF,EAAE,CAAc;IAEpC,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,KAAK,EAAG;gBACN,EAAE,EAAE;oBACF,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB;aACF;YACD,QAAQ,EAAG;gBACT,EAAE,EAAE;oBACF,yDAAU,CAAC,QAAQ;iBACpB;aACF;YACD,gBAAgB,EAAG;gBACjB,EAAE,EAAE,EAEH;aACF;SACF,CAAC;IACJ,CAAC;;kFAhCU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEAEI;QAAA,8EACI;QAAA,0EACA;QAAA,kFACI;QAAA,8EACI;QAAA,2EACJ;QAAA,4DAAW;QACX,iFACI;QAAA,qEACJ;QAAA,4DAAiB;QACjB,oFACI;QAAA,8EACJ;QAAA,4DAAoB;QACxB,4DAAkB;QAElB,uFAEI;QAAA,qFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEACA;QAAA,+EAAoC;QAAA,gEAAI;QAAA,4DAAW;QACvD,4DAAiB;QAEjB,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,+EAAoC;QAAA,gEAAI;QAAA,4DAAW;QACvD,4DAAiB;QAEjB,qFACI;QAAA,6EAAW;QAAA,4EAAgB;QAAA,4DAAY;QACvC,uEACA;QAAA,+EAAoC;QAAA,gEAAI;QAAA,4DAAW;QACvD,4DAAiB;QAErB,4DAAmB;QAEnB,wFACI;QAAA,8EACI;QAAA,sEACJ;QAAA,4DAAS;QACb,4DAAmB;QAEnB,uFACI;QAAA,gFAAmB;QAAA,8EAA4C;QAAA,iEAAK;QAAA,4DAAS;QACjF,4DAAkB;QAClB,4DAAO;QACX,4DAAW;QAEf,4DAAM;;QA/CQ,0DAA8B;QAA9B,2FAA8B;QAoCxB,2DAAqC;QAArC,kGAAqC;;;;;;;;;;;;;;;;;;;;ACvCV;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.scss']\n})\nexport class PasswordResetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>password-reset works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { PasswordResetComponent } from './components/password-reset/password-reset.component';\n\nconst routes: Routes = [\n  {\n    path : \"\",\n    redirectTo : \"login\",\n    pathMatch : \"full\"\n  },\n  {\n    path: \"login\",\n    component: LoginComponent \n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'password-reset',\n    component: PasswordResetComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-component',\n  templateUrl: './not-found-component.component.html',\n  styleUrls: ['./not-found-component.component.scss']\n})\nexport class NotFoundComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found-component works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebase : {\n  apiKey: \"AIzaSyADK72Egy8OzHB3Rt_P-aUaRQj25gpAgtg\",\n  authDomain: \"biznet-540c7.firebaseapp.com\",\n  projectId: \"biznet-540c7\",\n  storageBucket: \"biznet-540c7.appspot.com\",\n  messagingSenderId: \"489577648599\",\n  appId: \"1:489577648599:web:d86793e74d0353534a7b92\",\n  measurementId: \"G-4PVPC6BV5S\"\n}\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor( ){ }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm : any;\n\n  constructor(private fb : FormBuilder, private _auth : AuthService){ \n\n  }\n\n  login(){\n    \n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email : ['', [\n        Validators.email,\n        Validators.required\n      ]],\n      password : ['', [\n        Validators.required\n      ]]\n    });\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center auto\" style=\"width: 100%; height: 100%;\">\n\n    <mat-card fxFlex.xs=\"90%\" fxFlex.gt-xs=\"400px\" class=\"mat-elevation-z4\">\n        <form [formGroup]=\"loginForm\" >\n            <mat-card-header>\n                <mat-icon matCardAvatar>\n                    account_circle\n                </mat-icon>\n                <mat-card-title>\n                    Login\n                </mat-card-title>\n\n                <mat-card-subtitle>\n                    Enter login details\n                </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-card-content fxLayout=\"column\">\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>email</mat-label>\n                    <input formControlName=\"email\" matInput type=\"email\" required>\n                    <mat-icon matSuffix color=\"primary\">mail</mat-icon>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>password</mat-label>\n                    <input formControlName=\"password\" matInput type=\"password\" required>\n                    <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n                </mat-form-field>\n\n            </mat-card-content>\n\n            <mat-card-actions align=\"end\"> \n                <button mat-flat-button [disabled]=\"loginForm.invalid\" color=\"primary\" (click)=\"login()\">Login</button>\n            </mat-card-actions>\n\n            <mat-card-footer style=\"padding: 10px\">\n                Not registered?<button mat-flat-button routerLink=\"/register\">Register</button>\n            </mat-card-footer>\n        </form>\n    </mat-card>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'BizNet';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from  '@angular/forms';\n\n//Material modules\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule} from'@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\n\n//FlexLayoutModule\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { PasswordResetComponent } from './components/password-reset/password-reset.component';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, PasswordResetComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    FlexLayoutModule\n  ],\n  exports:[\n    LoginComponent,\n    RegisterComponent,\n    PasswordResetComponent\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  isLoggedIn : boolean = false;\n\n  constructor( public firebaseAuth : AngularFireAuth ){ \n\n  }\n\n  async signin( email : string, password : string){\n    await this.firebaseAuth.signInWithEmailAndPassword(email, password).then(\n      res=>{\n        this.isLoggedIn = true;\n        localStorage.setItem('user', JSON.stringify(res.user))\n      }\n    )\n  }\n\n  async signup( email : string, password : string){\n    await this.firebaseAuth.createUserWithEmailAndPassword(email, password).then(\n      res=>{\n        this.isLoggedIn = true;\n        localStorage.setItem('user', JSON.stringify(res.user))\n      }\n    )\n  }\n\n  async logout(){\n    this.firebaseAuth.signOut();\n    localStorage.removeItem('user');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { FirebaseService } from './services/firebase.service';\n\n//Core module\nimport { CoreModule } from './core/core.module';\nimport { AuthModule } from './auth/auth.module';\n\n//Material modules\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotFoundComponentComponent } from './not-found-component/not-found-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponentComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(\n      {\n        apiKey: \"AIzaSyADK72Egy8OzHB3Rt_P-aUaRQj25gpAgtg\",\n        authDomain: \"biznet-540c7.firebaseapp.com\",\n        projectId: \"biznet-540c7\",\n        storageBucket: \"biznet-540c7.appspot.com\",\n        messagingSenderId: \"489577648599\",\n        appId: \"1:489577648599:web:d86793e74d0353534a7b92\",\n        measurementId: \"G-4PVPC6BV5S\"\n      }\n    ),\n    CoreModule,\n    AuthModule,\n    FlexLayoutModule,\n    MatIconModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    FirebaseService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n//Angular material modules\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { CoreRoutingModule } from './core-routing.module';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\n\n\n@NgModule({\n  declarations: [ToolbarComponent, SidenavComponent],\n  imports: [\n    CommonModule,\n    CoreRoutingModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule\n  ],\n  exports: [\n    ToolbarComponent,\n    SidenavComponent\n  ]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nimport { NotFoundComponentComponent } from './not-found-component/not-found-component.component'\n\nconst routes: Routes = [\n  {\n    path: \"**\",\n    component: NotFoundComponentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-drawer-container class=\"example-container\">\n  <mat-drawer #drawer mode=\"over\" opened>Drawer content</mat-drawer>\n  <mat-drawer-content>\n    <button (click)=\"drawer.toggle()\" mat-icon-button>\n        <mat-icon>menu</mat-icon>\n    </button>\n    Main content\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registrationForm : any;\n\n  constructor(private fb : FormBuilder){ \n\n  }\n\n  register(){\n    console.log(\"Registering\");\n  }\n\n  ngOnInit(): void {\n\n    this.registrationForm = this.fb.group({\n      email : [\n        '', [\n          Validators.required,\n          Validators.email\n        ]\n      ],\n      password : [\n        '', [\n          Validators.required\n        ]\n      ],\n      password_confirm : [\n        '', [\n\n        ]\n      ]\n    })\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center auto\" style=\"width: 100%; height: 100%;\">\n\n    <mat-card fxFlex.xs=\"90%\" fxFlex.gt-xs=\"400px\" class=\"mat-elevation-z4\">\n        <form [formGroup]=\"registrationForm\">\n        <mat-card-header>\n            <mat-icon matCardAvatar>\n                account_circle\n            </mat-icon>\n            <mat-card-title>\n                Register\n            </mat-card-title>\n            <mat-card-subtitle>\n                Create an account\n            </mat-card-subtitle>\n        </mat-card-header>\n\n        <mat-card-content fxLayout=\"column\">\n            \n            <mat-form-field appearance=\"outline\">\n                <mat-label>email</mat-label>\n                <input matInput type=\"email\" formControlName=\"email\" required>\n                <mat-icon matSuffix color=\"primary\">mail</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" required>\n                <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>confirm password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password_confirm\" required>\n                <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n            </mat-form-field>\n\n        </mat-card-content>\n\n        <mat-card-actions align=\"end\">\n            <button [disabled]=\"registrationForm.invalid\" mat-flat-button color=\"primary\">\n                register\n            </button>\n        </mat-card-actions>\n\n        <mat-card-footer style=\"padding: 10px\">\n            Already registered?<button mat-flat-button routerLink=\"/login\">Login</button>\n        </mat-card-footer>\n        </form>\n    </mat-card>\n\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}